#statuses
  - @servers.each do |s|
    - if s.has_key?(:header)
      %div(class = "header")= (s[:header].blank? ? "&nbsp;" : s[:header])
    
    - elsif s.has_key?(:divider)
      %div(class = "divider" style = "height: #{s[:divider]}")

    - else
      - link_url = (@config[:links_contain_credentials] ? inject_credentials_in(s[:parser].url || s[:url], s[:username], s[:password]) : s[:url])
      %a(href = link_url class = "server_box")
        %div(class = "server #{s[:status]}")
          = server_label(s)
          - if s[:exception] || s[:parser].details
            .details= (s[:exception].nil? ? s[:parser].details : exception_description(s[:exception]))
          
 
#kudos
  Generated by 
  %a(href="http://github.com/cmer/landscape/" target="_blank")
    Landscape
    = APP_VERSION
  at
  = Time.now

:javascript
  var errorCount = #{@error_count};
  if(window.fluid) { 
    window.fluid.dockBadge=(errorCount > 0) ? errorCount.toString() : ""; 
    
    // Add servers to context menu
    #{fluid_rightclick_options_js(@config, @servers).join("\n  ")}
    
    // Growl messages
    #{growl_messages_js(@current_statuses, @previous_statuses).join("\n  ")}
  }
